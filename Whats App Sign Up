import { useState } from 'react'
import { Search, MoreVertical, Send, Paperclip, Mic, ChevronDown } from 'lucide-react'
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { ScrollArea } from "@/components/ui/scroll-area"

export default function Component() {
  const [selectedChat, setSelectedChat] = useState(0)

  const chats = [
    { id: 0, name: 'Alice Johnson', lastMessage: 'Hey, how are you?', time: '10:30 AM', unread: 2 },
    { id: 1, name: 'Bob Smith', lastMessage: 'Did you see the game last night?', time: 'Yesterday', unread: 0 },
    { id: 2, name: 'Carol Williams', lastMessage: 'Meeting at 3 PM', time: 'Tuesday', unread: 1 },
  ]

  const messages = [
    { id: 0, sender: 'Alice Johnson', content: 'Hey, how are you?', time: '10:30 AM', isSent: false },
    { id: 1, sender: 'You', content: 'I\'m good, thanks! How about you?', time: '10:31 AM', isSent: true },
    { id: 2, sender: 'Alice Johnson', content: 'Doing well, thanks for asking!', time: '10:32 AM', isSent: false },
  ]

  return (
    <div className="flex h-screen bg-gray-100">
      {/* Sidebar */}
      <div className="w-1/3 bg-white border-r border-gray-300">
        {/* Header */}
        <div className="flex items-center justify-between p-4 bg-gray-200">
          <Avatar>
            <AvatarImage src="/placeholder-avatar.jpg" alt="Your avatar" />
            <AvatarFallback>You</AvatarFallback>
          </Avatar>
          <div className="flex space-x-2">
            <Button variant="ghost" size="icon">
              <MoreVertical className="h-5 w-5" />
            </Button>
          </div>
        </div>
        {/* Search */}
        <div className="p-4">
          <div className="relative">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
            <Input className="pl-10" placeholder="Search or start new chat" />
          </div>
        </div>
        {/* Chat list */}
        <ScrollArea className="h-[calc(100vh-132px)]">
          {chats.map((chat) => (
            <div
              key={chat.id}
              className={`flex items-center p-4 cursor-pointer hover:bg-gray-100 ${selectedChat === chat.id ? 'bg-gray-100' : ''}`}
              onClick={() => setSelectedChat(chat.id)}
            >
              <Avatar className="h-12 w-12">
                <AvatarImage src={`/placeholder-avatar-${chat.id + 1}.jpg`} alt={chat.name} />
                <AvatarFallback>{chat.name[0]}</AvatarFallback>
              </Avatar>
              <div className="ml-4 flex-1">
                <div className="flex justify-between">
                  <h3 className="font-semibold">{chat.name}</h3>
                  <span className="text-sm text-gray-500">{chat.time}</span>
                </div>
                <p className="text-sm text-gray-600 truncate">{chat.lastMessage}</p>
              </div>
              {chat.unread > 0 && (
                <div className="bg-green-500 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs">
                  {chat.unread}
                </div>
              )}
            </div>
          ))}
        </ScrollArea>
      </div>
      {/* Main content */}
      <div className="flex-1 flex flex-col">
        {/* Chat header */}
        <div className="flex items-center justify-between p-4 bg-gray-200">
          <div className="flex items-center">
            <Avatar className="h-10 w-10">
              <AvatarImage src={`/placeholder-avatar-${selectedChat + 1}.jpg`} alt={chats[selectedChat].name} />
              <AvatarFallback>{chats[selectedChat].name[0]}</AvatarFallback>
            </Avatar>
            <h2 className="ml-4 font-semibold">{chats[selectedChat].name}</h2>
          </div>
          <div className="flex space-x-2">
            <Button variant="ghost" size="icon">
              <Search className="h-5 w-5" />
            </Button>
            <Button variant="ghost" size="icon">
              <MoreVertical className="h-5 w-5" />
            </Button>
          </div>
        </div>
        {/* Messages */}
        <ScrollArea className="flex-1 p-4">
          {messages.map((message) => (
            <div key={message.id} className={`flex ${message.isSent ? 'justify-end' : 'justify-start'} mb-4`}>
              <div className={`max-w-[70%] p-3 rounded-lg ${message.isSent ? 'bg-green-100' : 'bg-white'}`}>
                <p>{message.content}</p>
                <p className="text-xs text-gray-500 text-right mt-1">{message.time}</p>
              </div>
            </div>
          ))}
        </ScrollArea>
        {/* Message input */}
        <div className="p-4 bg-gray-200">
          <div className="flex items-center space-x-2">
            <Button variant="ghost" size="icon">
              <ChevronDown className="h-5 w-5" />
            </Button>
            <Input className="flex-1" placeholder="Type a message" />
            <Button variant="ghost" size="icon">
              <Paperclip className="h-5 w-5" />
            </Button>
            <Button variant="ghost" size="icon">
              <Mic className="h-5 w-5" />
            </Button>
            <Button size="icon">
              <Send className="h-5 w-5" />
            </Button>
          </div>
        </div>
      </div>
    </div>
  )
}
